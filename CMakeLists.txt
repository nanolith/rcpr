PROJECT(rcpr)

cmake_minimum_required(VERSION 3.10)

INCLUDE(CheckSymbolExists)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")

option(MODELCHECK_REQUIRED "Require Model Checking")

#minunit package
find_package(minunit REQUIRED)
#threads package
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads)

#detect fibers
include ("cmake/fibers.cmake")

#includes
INCLUDE_DIRECTORIES(include)

#source files
AUX_SOURCE_DIRECTORY(src/allocator RCPR_ALLOCATOR_SOURCES)
AUX_SOURCE_DIRECTORY(src/bigint RCPR_BIGINT_SOURCES)
AUX_SOURCE_DIRECTORY(src/fiber/common RCPR_FIBER_SOURCES)
AUX_SOURCE_DIRECTORY(src/list RCPR_LIST_SOURCES)
AUX_SOURCE_DIRECTORY(src/psock RCPR_PSOCK_SOURCES)
AUX_SOURCE_DIRECTORY(src/queue RCPR_QUEUE_SOURCES)
AUX_SOURCE_DIRECTORY(src/resource RCPR_RESOURCE_SOURCES)
AUX_SOURCE_DIRECTORY(src/platform/pthread/thread RCPR_PTHREAD_THREAD_SOURCES)
AUX_SOURCE_DIRECTORY(src/slist RCPR_SLIST_SOURCES)
AUX_SOURCE_DIRECTORY(src/socket_utilities RCPR_SOCKET_UTILITIES_SOURCES)
AUX_SOURCE_DIRECTORY(src/stack RCPR_STACK_SOURCES)
SET(RCPR_SOURCES
    ${RCPR_ALLOCATOR_SOURCES}
    ${RCPR_BIGINT_SOURCES}
    ${RCPR_LIST_SOURCES}
    ${RCPR_PSOCK_SOURCES}
    ${RCPR_QUEUE_SOURCES}
    ${RCPR_RESOURCE_SOURCES}
    ${RCPR_SLIST_SOURCES}
    ${RCPR_SOCKET_UTILITIES_SOURCES}
    ${RCPR_STACK_SOURCES})

#test source files
AUX_SOURCE_DIRECTORY(test/allocator RCPR_TEST_ALLOCATOR_SOURCES)
AUX_SOURCE_DIRECTORY(test/bigint RCPR_TEST_BIGINT_SOURCES)
AUX_SOURCE_DIRECTORY(test/fiber RCPR_TEST_FIBER_SOURCES)
AUX_SOURCE_DIRECTORY(test/list RCPR_TEST_LIST_SOURCES)
AUX_SOURCE_DIRECTORY(test/psock RCPR_TEST_PSOCK_SOURCES)
AUX_SOURCE_DIRECTORY(test/queue RCPR_TEST_QUEUE_SOURCES)
AUX_SOURCE_DIRECTORY(test/resource RCPR_TEST_RESOURCE_SOURCES)
AUX_SOURCE_DIRECTORY(
    test/platform/pthread/thread RCPR_TEST_PTHREAD_THREAD_SOURCES)
AUX_SOURCE_DIRECTORY(test/slist RCPR_TEST_SLIST_SOURCES)
AUX_SOURCE_DIRECTORY(test/socket_utilities RCPR_TEST_SOCKET_UTILITIES_SOURCES)
AUX_SOURCE_DIRECTORY(test/stack RCPR_TEST_STACK_SOURCES)
SET(RCPR_TEST_SOURCES 
    ${RCPR_TEST_ALLOCATOR_SOURCES}
    ${RCPR_TEST_BIGINT_SOURCES}
    ${RCPR_TEST_LIST_SOURCES}
    ${RCPR_TEST_PSOCK_SOURCES}
    ${RCPR_TEST_QUEUE_SOURCES}
    ${RCPR_TEST_RESOURCE_SOURCES}
    ${RCPR_TEST_SLIST_SOURCES}
    ${RCPR_TEST_SOCKET_UTILITIES_SOURCES}
    ${RCPR_TEST_STACK_SOURCES})

#conditional compilation for Threads
if (Threads_FOUND)
    SET(RCPR_SOURCES ${RCPR_SOURCES} ${RCPR_PTHREAD_THREAD_SOURCES})
    SET(RCPR_TEST_SOURCES
            ${RCPR_TEST_SOURCES}
            ${RCPR_TEST_PTHREAD_THREAD_SOURCES})
endif ()

#conditional compilation for fibers
if (RCPR_FIBER_FOUND)
    SET(RCPR_SOURCES
        ${RCPR_SOURCES} ${RCPR_FIBER_SOURCES} ${RCPR_FIBER_PLATFORM_SOURCES})
    SET(RCPR_TEST_SOURCES ${RCPR_TEST_SOURCES} ${RCPR_TEST_FIBER_SOURCES})
endif()

ADD_LIBRARY(rcpr STATIC
    ${RCPR_SOURCES})
TARGET_COMPILE_OPTIONS(rcpr PRIVATE -fPIC -O2 -Wall -Werror -Wextra)

ADD_EXECUTABLE(testrcpr
    ${RCPR_SOURCES} ${RCPR_TEST_SOURCES})

TARGET_COMPILE_OPTIONS(testrcpr PRIVATE -g -O0 --coverage ${MINUNIT_CFLAGS})
TARGET_LINK_LIBRARIES(testrcpr PRIVATE -g -O0 --coverage ${MINUNIT_LDFLAGS})

#conditional link for Threads
if (Threads_FOUND)
    TARGET_LINK_LIBRARIES(testrcpr PRIVATE Threads::Threads)
endif()

ADD_CUSTOM_TARGET(
    test
    COMMAND testrcpr
    DEPENDS testrcpr)

ADD_CUSTOM_TARGET(
    model_checks
    COMMAND make
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/models)

if (MODELCHECK_REQUIRED)
    ADD_DEPENDENCIES(testrcpr model_checks)
endif()

#Build a pkg-config file
SET(RCPR_PC "${CMAKE_BINARY_DIR}/rcpr.pc")
FILE(WRITE  ${RCPR_PC} "Name: rcpr")
FILE(APPEND ${RCPR_PC} "\nDescription: Reliable C Portable Runtime")
FILE(APPEND ${RCPR_PC} "\nVersion: 0.2-snapshot")
FILE(APPEND ${RCPR_PC} "\nURL: https://github.com/nanolith/rcpr")
FILE(APPEND ${RCPR_PC} "\nprefix=${CMAKE_INSTALL_PREFIX}")
FILE(APPEND ${RCPR_PC} "\nlibdir=\${prefix}/lib")
FILE(APPEND ${RCPR_PC} "\nincludedir=\${prefix}/include")
FILE(APPEND ${RCPR_PC} "\nLibs: -L\${libdir} -lrcpr")
FILE(APPEND ${RCPR_PC} "\nCflags: -I\${includedir}")
INSTALL(FILES ${RCPR_PC} DESTINATION lib/pkgconfig)

#Install headers
FILE(GLOB RCPR_INCLUDES "${CMAKE_CURRENT_SOURCE_DIR}/include/rcpr/*.h")
INSTALL(FILES ${RCPR_INCLUDES} DESTINATION include/rcpr)

#Install library
INSTALL(TARGETS rcpr
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib)

#Examples
ADD_SUBDIRECTORY(examples)
